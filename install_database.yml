---
- hosts: database
  vars_files:
    - vars/config.yml

  vars:
    mysql_version: mysql-8.0
    mysql_apt_url: "https://dev.mysql.com/downloads/repo/apt/"
    mysql_python_package: "python3-pymysql"
    mysql_cnf_path: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    mysql_root_password: "{{ db_root_password | default(k3s_config.nodes.k3s_databases.db_root_password) | mandatory }}"
    mysql_db_name: "{{ db_name | default(k3s_config.nodes.k3s_databases.db_name) | mandatory }}"
    mysql_db_username: "{{ db_username | default(k3s_config.nodes.k3s_databases.db_username) | mandatory }}"
    mysql_db_password: "{{ db_password | default(k3s_config.nodes.k3s_databases.db_password) | mandatory }}"

    # populates node_config with the host vars for the given inventory_hostname the play is running for
    node_config: "{{ k3s_config.nodes.k3s_databases.hosts | json_query(query_string) | first }}"
    query_string: "[? name=='{{ inventory_hostname }}']"

  tasks:
    - name: Become block
      become: yes
      block:
        - name: Get latest mysql deb file from mysql apt url
          uri:
            url: "{{ mysql_apt_url }}"
            return_content: yes
          register: mysql_apt_url_result

        - name: Set mysql debconf passwords
          ansible.builtin.debconf:
            name: "{{ item.name }}"
            question: "{{ item.name }}/{{ item.question }}"
            value: "{{ item.value }}"
            vtype: "{{ item.vtype }}"
          no_log: yes
          vars:
            debconf:
              - name: mysql-apt-config
                question: enable-repo 
                value: "{{ mysql_root_password | mandatory }}"
                vtype: password
              - name: mysql-community-server
                question: root-pass
                value: "{{ mysql_root_password | mandatory }}"
                vtype: password
              - name: mysql-community-server
                question: re-root-pass
                value: "{{ mysql_root_password | mandatory }}"
                vtype: password
          loop: "{{ debconf }}"

        - name: Install latest mysql deb package
          apt:
            deb: "https://dev.mysql.com/get/{{ mysql_apt_url_result.content | regex_search(query) }}"
          vars:
            query: '(?<=\()mysql.*[.]deb(?=\))'
          environment:
            DEBIAN_FRONTEND: noninteractive

        - name: Apt update and upgrade and install gnupg
          apt:
            update_cache: yes
            name:
              - gnupg
              - mysql-server

        - name: Set bind-address to 0.0.0.0
          lineinfile:
            path: "{{ mysql_cnf_path }}"
            regexp: '^bind-address='
            line: "bind-address =    {{ config.db_bind_address | default('0.0.0.0') }}"

        - name: Install mysqld python libary for Ansible
          package:
            name: '{{ mysql_python_package }}'
            state: present

    - name: Create mysql user with password and grant privileges for k3s database
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        state: present
        name: "{{ mysql_db_username }}"
        password: "{{ mysql_db_password }}"
        priv: '{{ mysql_db_name }}.*:ALL,GRANT'

    - debug:
        msg: 'WARNING - you have to change default mysql_root_password'
      when: mysql_root_password == '-----====>SetR00tPa$$wordH3r3!!!<====-----'

    - name: root password is present
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: 'root'
        host_all: true
        password: '{{ mysql_root_password | mandatory }}'
        state: present
        login_unix_socket: "{{ login_unix_socket | default(omit) }}"

    - name: test database is absent
      mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: test
        state: absent
        login_unix_socket: "{{ login_unix_socket | default(omit) }}"
#      when: mysql_remove_test_database

    - name: anonymous users are absent
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: ''
        state: absent
        host_all: true
        login_unix_socket: "{{ login_unix_socket | default(omit) }}"
 #     when: mysql_remove_anonymous_users

    - name: remove remote root
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query:
          - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
        login_unix_socket: "{{ login_unix_socket | default(omit) }}"
  #    when: mysql_remove_remote_root

