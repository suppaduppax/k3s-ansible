- hosts: storage
  vars:
    s3_login_secret_file: files/s3_login_secret.yml.j2

  pre_tasks:
    - include_role:
        role: k3s/fetch_kube_config
        apply:
          delegate_to: localhost

    - name: Create longhorn namespace
      kubernetes.core.k8s:
        name: "{{ longhorn_backup.secret_namespace | default('longhorn-system') }}"
        api_version: v1
        kind: Namespace
        state: present
      delegate_to: localhost

    - name: Ensure s3 login secret is present
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: "{{ longhorn_backup.secret_name | mandatory }}"
            namespace: "{{ longhorn_backup.secret_namespace | default('longhorn-system') }}"
          data:
            AWS_ACCESS_KEY_ID: "{{ longhorn_backup.username | mandatory }}"
            AWS_SECRET_ACCESS_KEY: "{{ longhorn_backup.password | mandatory }}"
            AWS_ENDPOINTS: "{{ longhorn_backup.endpoint | mandatory }}"
            AWS_CERT: "{{ longhorn_backup.certificate | mandatory }}"
      delegate_to: localhost

  roles:
    - role: k3s/storage

- hosts: worker
  tasks:
    - name: Install apt prereqs
      become: yes
      ansible.builtin.apt:
        name:
          - open-iscsi
        update_cache: yes

    - name: Ensure open-iscsi is running
      become: yes
      ansible.builtin.systemd:
        name: iscsid
        state: started

- hosts: localhost
  vars:
    longhorn_values_file: "{{ playbook_dir }}/files/longhorn_values.yml"
    longhorn_values_template: "{{ playbook_dir }}/files/longhorn_values.yml.j2"

  tasks:
    - name: Add the Longhorn Helm repository
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io

    - debug: var=kube_config_file

    - name: Template longhorn values
      template:
        src: "{{ longhorn_values_template }}"
        dest: "{{ longhorn_values_file }}"
      vars:
        longhorn_taint_tolerations: "{{ hostvars[groups['storage'][0]].node_taints }}"

    - name: Install Longhorn in the longhorn-system namespace
      kubernetes.core.helm:
        name: longhorn
        kubeconfig: "{{ playbook_dir }}/files/kube_config.yml"
        chart_ref: longhorn/longhorn
        release_namespace: longhorn-system
        create_namespace: yes
        update_repo_cache: yes
        validate_certs: no
#        values: "{{ lookup('template', playbook_dir + '/files/longhorn_values.yml.j2') | from_yaml }}"
        values_files: "{{ longhorn_values_file }}"
        force: yes

    - name: Remove local-path storage from default storageclass
      command: "kubectl patch storageclass {{ storage }} --kubeconfig {{ kube_config_file }} -p '{{ patch }}'"
      vars:
        storage: local-path
        patch: '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
